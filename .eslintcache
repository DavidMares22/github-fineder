[{"C:\\Users\\Alex\\Documents\\github-finder\\src\\App.js":"1","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\layout\\Navbar.js":"2","C:\\Users\\Alex\\Documents\\github-finder\\src\\index.js":"3","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\users\\UserItem.js":"4","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\users\\Users.js":"5","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\layout\\Spinner.js":"6","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\users\\Search.js":"7","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\layout\\Alert.js":"8","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\pages\\About.js":"9","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\users\\User.js":"10","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\repos\\RepoItem.js":"11","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\repos\\Repos.js":"12"},{"size":2950,"mtime":1607817612995,"results":"13","hashOfConfig":"14"},{"size":642,"mtime":1607613955353,"results":"15","hashOfConfig":"14"},{"size":200,"mtime":1607259516875,"results":"16","hashOfConfig":"14"},{"size":570,"mtime":1607736060430,"results":"17","hashOfConfig":"14"},{"size":616,"mtime":1607440090752,"results":"18","hashOfConfig":"14"},{"size":302,"mtime":1607439854524,"results":"19","hashOfConfig":"14"},{"size":985,"mtime":1607785390668,"results":"20","hashOfConfig":"14"},{"size":428,"mtime":1607610851425,"results":"21","hashOfConfig":"14"},{"size":230,"mtime":1607612576581,"results":"22","hashOfConfig":"14"},{"size":2827,"mtime":1607786236706,"results":"23","hashOfConfig":"14"},{"size":277,"mtime":1607783553301,"results":"24","hashOfConfig":"14"},{"size":202,"mtime":1607783295094,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wsdpoi",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Alex\\Documents\\github-finder\\src\\App.js",[],"C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\layout\\Navbar.js",[],["55","56"],"C:\\Users\\Alex\\Documents\\github-finder\\src\\index.js",[],["57","58"],"C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\users\\UserItem.js",["59","60"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst UserItem = (props) => {\r\n\r\n\r\n\r\n    const { login, avatar_url, html_url } = props.user;\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <img src={avatar_url} className=\"round-img\" style={{ width: '60px' }} />\r\n            <h3>{login}</h3>\r\n            <div>\r\n                <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my-1\">\r\n                    More\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserItem;\r\n","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\users\\Users.js",[],"C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\layout\\Spinner.js",["61"],"import React, {Fragment} from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Fragment>\r\n            <img src={spinner} style={{width: '200px', margin:'auto', display:'block'}} />\r\n        </Fragment>\r\n      \r\n    );\r\n};\r\n\r\n \r\nexport default Spinner;","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\users\\Search.js",[],"C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\pages\\About.js",[],"C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\users\\User.js",["62"]," import React, { Fragment,useEffect } from 'react';\r\n import Spinner from '../layout/Spinner';\r\n import {Link} from 'react-router-dom';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import { faCheck,faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n import Repos from '../repos/Repos';\r\n \r\n const User = (props) => {\r\n\r\n    useEffect(()=>{\r\n      props.getUser(props.match.params.login)\r\n      props.getUserRepos(props.match.params.login)\r\n    },[])\r\n   \r\n\r\n     \r\n         const {name,avatar_url,location,bio,blog,login,company,html_url,followers,following,public_repos,public_gists,hireable } = props.user;\r\n         if (props.loading) return <Spinner />;\r\n\r\n         return (<Fragment>\r\n             <Link to='/' className='btn btn-light'>\r\n                 Back To Search\r\n             </Link>\r\n             Hireable:{' '}\r\n             {hireable ? (<FontAwesomeIcon icon={faCheck} className=\"text-success\"/> ): (<FontAwesomeIcon icon={faTimesCircle} className=\"text-danger\"/>)}\r\n             <div className='card grid-2'>\r\n          <div className='all-center'>\r\n            <img\r\n              src={avatar_url}\r\n              className='round-img'\r\n              alt=''\r\n              style={{ width: '150px' }}\r\n            />\r\n            <h1>{name}</h1>\r\n            <p>Location: {location}</p>\r\n          </div>\r\n          <div>\r\n            {bio && (\r\n              <Fragment>\r\n                <h3>Bio</h3>\r\n                <p>{bio}</p>\r\n              </Fragment>\r\n            )}\r\n            <a href={html_url} className='btn btn-dark my-1'>\r\n              Visit Github Profile\r\n            </a>\r\n            <ul>\r\n              <li>\r\n                {login && (\r\n                  <Fragment>\r\n                    <strong>Username: </strong> {login}\r\n                  </Fragment>\r\n                )}\r\n              </li>\r\n\r\n              <li>\r\n                {company && (\r\n                  <Fragment>\r\n                    <strong>Company: </strong> {company}\r\n                  </Fragment>\r\n                )}\r\n              </li>\r\n\r\n              <li>\r\n                {blog && (\r\n                  <Fragment>\r\n                    <strong>Website: </strong> {blog}\r\n                  </Fragment>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className='card text-center'>\r\n          <div className='badge badge-primary'>Followers: {followers}</div>\r\n          <div className='badge badge-success'>Following: {following}</div>\r\n          <div className='badge badge-light'>Public Repos: {public_repos}</div>\r\n          <div className='badge badge-dark'>Public Gists: {public_gists}</div>\r\n        </div>\r\n\r\n        <Repos repos={props.repos}/> \r\n         </Fragment>\r\n         );\r\n     \r\n }\r\n \r\n export default User;","C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\repos\\RepoItem.js",[],"C:\\Users\\Alex\\Documents\\github-finder\\src\\components\\repos\\Repos.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"63","replacedBy":"67"},{"ruleId":"65","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":8,"column":32,"nodeType":"71","messageId":"72","endLine":8,"endColumn":40},{"ruleId":"73","severity":1,"message":"74","line":11,"column":13,"nodeType":"75","endLine":11,"endColumn":85},{"ruleId":"73","severity":1,"message":"74","line":8,"column":13,"nodeType":"75","endLine":8,"endColumn":91},{"ruleId":"76","severity":1,"message":"77","line":13,"column":7,"nodeType":"78","endLine":13,"endColumn":9,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"no-unused-vars","'html_url' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [props]",{"range":"85","text":"86"},[479,481],"[props]"]